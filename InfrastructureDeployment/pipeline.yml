AWSTemplateFormatVersion: 2010-09-09
Description: Cross Account Infrastructure Deployment Pipeline

Parameters:
  ProjectName:
    Type: String
    Default: cross-account
    Description: Name for the Project (NB must be lowercase)
  PipelineName:
    Type: String
    Description: The name given to the pipeline
    Default: infrastructure
  DevAccountNo:
    Type: String
    Description: The Account Number of the dev account
  ProdAccountNo:
    Type: String
    Description: The Account Number of the prod account
  CodeBuildEnvironment:
    Type: String
    Default: "aws/codebuild/standard:5.0"
  CodeStarConnectionArn:
    Type: String
    Description: The codestar connection used to connect to github
  SourceRepository:
    Type: String
    Description: The Fully qualified repository name
    Default: scottjbaldwin/AWSCrossAccountDeployment
    
Resources:
  ArtefactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-${PipelineName}-artefactbucket
      BucketEncryption: 
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'aws:kms'
              KMSMasterKeyID: 
                Fn::ImportValue: 
                  !Sub '${ProjectName}:ArtefactKMSKey'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
        - Id: Purge after 7 days of creation
          ExpirationInDays: 7
          Status: Enabled
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Pipeline
          Value: !Ref PipelineName

  ArtefactBucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref ArtefactBucket
      PolicyDocument: 
        Statement: 
          - Sid: ServicePermit
            Effect: Allow
            Principal:
              Service: 
                - codebuild.amazonaws.com
                - codepipeline.amazonaws.com
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::${ProjectName}-${PipelineName}-artefactbucket'
          - Sid: AllowTargetAccountsAccessS3
            Effect: Allow
            Principal:
              AWS: 
                - !Sub 'arn:aws:iam::${DevAccountNo}:root'
                - !Sub 'arn:aws:iam::${ProdAccountNo}:root'
            Action: 's3:*'
            Resource: 
              - !Sub 'arn:aws:s3:::${ProjectName}-${PipelineName}-artefactbucket/*'
              - !Sub 'arn:aws:s3:::${ProjectName}-${PipelineName}-artefactbucket'

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: 
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}-${PipelineName}_build'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}-${PipelineName}_build:*'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource: !Sub "arn:aws:s3:::${ProjectName}-${PipelineName}-artefactbucket/*"
                Action: 
                  - s3:*
              - Effect: Allow
                Resource: !Sub "arn:aws:s3:::${ProjectName}-${PipelineName}-artefactbucket"
                Action: 
                  - s3:*
              - Effect: Allow
                Action:
                  - 'codebuild:*'
                  - 'codepipeline:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ReEncrypt*
                  - kms:DescribeKey*
                  - kms:GenerateDataKey
                Resource: 
                  Fn::ImportValue: 
                    !Sub '${ProjectName}:ArtefactKMSKey'
              - Effect: Allow
                Action:
                  - 'kms:ListKeys'
                  - 'kms:ListAliases'
                Resource: '*'
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Pipeline
          Value: !Ref PipelineName

  # CodeBuild
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${ProjectName}-${PipelineName}_build'
      Description: Builds the backend services and creates a cloudformation template to deploy them
      Artifacts:
        Type: CODEPIPELINE
      Environment: 
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Sub '${CodeBuildEnvironment}'
        EnvironmentVariables:
          - Name: BUILD_OUTPUT_BUCKET
            Value: !Sub ${ProjectName}-${PipelineName}-artefactbucket
          - Name: AWS_REGION
            Value: !Sub ${AWS::Region}
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source: 
        Type: CODEPIPELINE
        BuildSpec: InfrastructureDeployment/buildspec.yml
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Pipeline
          Value: !Ref PipelineName

  PipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: 
            - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: 
                - codepipeline.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSCodeCommitFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'iam:PassRole'
                Effect: Allow
                Resource: '*'
              - Effect: Allow
                Action: 'sts:AssumeRole'
                Resource: 
                  - !Sub arn:aws:iam::${DevAccountNo}:role/${ProjectName}-${PipelineName}-${AWS::Region}-DeploymentRole
                  - !Sub arn:aws:iam::${ProdAccountNo}:role/${ProjectName}-${PipelineName}-${AWS::Region}-DeploymentRole
              - Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ReEncrypt*
                  - kms:DescribeKey*
                  - kms:GenerateDataKey
                Effect: Allow
                Resource:
                  Fn::ImportValue: 
                    !Sub '${ProjectName}:ArtefactKMSKey'
              - Action:
                  - 'kms:ListKeys'
                  - 'kms:ListAliases'
                Effect: Allow
                Resource: '*'
              - Action:
                  - 'codestar-connections:UseConnection'
                Effect: Allow
                Resource:
                  - !Ref CodeStarConnectionArn
              - Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Effect: Allow
                Resource:
                  - !GetAtt CodeBuildProject.Arn

                  
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Pipeline
          Value: !Ref PipelineName

  Pipeline:
      Type: AWS::CodePipeline::Pipeline
      Properties:
        Tags:
          - Key: Project
            Value: !Ref ProjectName
          - Key: Pipeline
            Value: !Ref PipelineName
        ArtifactStore: 
            Location: !Sub ${ProjectName}-${PipelineName}-artefactbucket
            Type: S3
            EncryptionKey:
              Id: 
                Fn::ImportValue:
                  !Sub '${ProjectName}:ArtefactKMSKey'
              Type: KMS
        Name: !Sub ${ProjectName}-${PipelineName}_pipeline
        RoleArn: !GetAtt PipelineExecutionRole.Arn
        Stages:
            - Name: Source
              Actions:
                - Name: GitHubRepo
                  ActionTypeId:
                    Category: Source
                    Owner: AWS
                    Provider: CodeStarSourceConnection
                    Version: '1'
                  Configuration:
                    ConnectionArn: !Ref CodeStarConnectionArn
                    FullRepositoryId: !Ref SourceRepository
                    DetectChanges: true
                    BranchName: !Sub "pipeline/${PipelineName}"
                  OutputArtifacts:
                    - Name: SourceArtefact
                  RunOrder: 1
            - Name: Build
              Actions:
                - Name: CodeBuild
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Provider: CodeBuild
                    Version: '1'
                  Configuration:
                    ProjectName: !Ref CodeBuildProject
                  InputArtifacts:
                    - Name: SourceArtefact
                  OutputArtifacts:
                    - Name: OutputArtefact
                  RunOrder: 1
            - Name: DeployToDev
              Actions:
                - Name: DeployS3Bucket
                  RoleArn: !Sub 'arn:aws:iam::${DevAccountNo}:role/${ProjectName}-${PipelineName}-${AWS::Region}-DeploymentRole'
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Provider: CloudFormation
                    Version: '1'
                  RunOrder: 1
                  Configuration:
                    RoleArn: !Sub 'arn:aws:iam::${DevAccountNo}:role/${ProjectName}-${PipelineName}-${AWS::Region}-DeploymentRole'
                    ActionMode: CREATE_UPDATE
                    StackName: !Sub '${ProjectName}-${PipelineName}-AppStack'
                    TemplatePath: OutputArtefact::ApplicationInfrastructure.yml
                    ParameterOverrides: !Sub |
                      {
                          "Environment" : "dev",
                          "PipelineName" : ${PipelineName}
                      }
            - Name: DeployToProd
              Actions:
                - Name: DeployS3Bucket
                  RoleArn: !Sub 'arn:aws:iam::${ProdAccountNo}:role/${ProjectName}-${PipelineName}-${AWS::Region}-DeploymentRole'
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Provider: CloudFormation
                    Version: '1'
                  RunOrder: 1
                  Configuration:
                    RoleArn: !Sub 'arn:aws:iam::${ProdAccountNo}:role/${ProjectName}-${PipelineName}-${AWS::Region}-DeploymentRole'
                    ActionMode: CREATE_UPDATE
                    StackName: !Sub '${ProjectName}-${PipelineName}-AppStack'
                    TemplatePath: OutputArtefact::ApplicationInfrastructure.yml
                    ParameterOverrides: !Sub |
                      {
                          "Environment" : "prod",
                          "PipelineName" : ${PipelineName}
                      }
